import { SingleValue } from 'react-select';
type SelectDefault = {
    value: string;
    label: string;
};
type State = {
    name: string;
    nameValid: boolean;
    lastName: string;
    lastNameValid: boolean;
    role: string;
    roleValid: boolean;
    documentIndex: string;
    documentIndexValid: boolean;
    documentIndexOptions: SelectDefault[];
    documentIndexDefault: SelectDefault;
    document: string;
    documentValid: boolean;
    address1: string;
    address1Valid: boolean;
    address2: string;
    address2Valid: boolean;
    city: string;
    cityValid: boolean;
    cityOptions: SelectDefault[];
    cityDefault: SelectDefault;
    stateCountry: string;
    stateCountryValid: boolean;
    stateCountryOptions: SelectDefault[];
    stateCountryDefault: SelectDefault;
    country: string;
    countryValid: boolean;
    countryOptions: SelectDefault[];
    countryDefault: SelectDefault;
    postcode: string;
    postcodeValid: boolean;
    email: string;
    emailValid: boolean;
    phone: string;
    phoneValid: boolean;
    password: string;
    passwordValid: boolean;
};
type Actions = {
    changeName: (value: string) => void;
    validationName: (value: string) => void;
    changeLastName: (value: string) => void;
    validationLastName: (value: string) => void;
    changeRole: (value: string) => void;
    validationRole: (value: string) => void;
    changeDocumentIndex: (newValue: SingleValue<{
        value: string;
        label: string;
    }>) => void;
    validationDocumentIndex: (value: string) => void;
    changeDocumentIndexOptions: () => void;
    changeDocument: (value: string) => void;
    validationDocument: (value: string) => void;
    changeAddress1: (value: string) => void;
    validationAddress1: (value: string) => void;
    changeAddress2: (value: string) => void;
    validationAddress2: (value: string) => void;
    changeCity: (newValue: SingleValue<{
        value: string;
        label: string;
    }>) => void;
    validationCity: (value: string) => void;
    changeCityOptions: () => void;
    changeStateCountry: (newValue: SingleValue<{
        value: string;
        label: string;
    }>) => void;
    validationStateCountry: (value: string) => void;
    changeStateCountryOptions: () => void;
    changeCountry: (newValue: SingleValue<{
        value: string;
        label: string;
    }>) => void;
    validationCountry: (value: string) => void;
    changePostcode: (value: string) => void;
    validationPostcode: (value: string) => void;
    changeEmail: (value: string) => void;
    validationEmail: (value: string) => void;
    changePhone: (value: string) => void;
    validationPhone: (value: string) => void;
    changePassword: (value: string) => void;
    validationPassword: (value: string) => void;
    validationButtonNext: () => void;
};
export type UseUser = {
    states: State;
    actions: Actions;
};
export declare function useGafpriUser(): UseUser;
export {};
